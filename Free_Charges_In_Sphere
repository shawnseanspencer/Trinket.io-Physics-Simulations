"""Inspiration and Credit to Rhett Allain"""

from vpython import *
scene = canvas()

#Graph Settings
g1 = graph(xtitle = 'Time [s]', ytitle = 'mag(E) [N/C]')
f1 = gcurve()

#Constants
k = 9e9 #Nm^2/C^2
K = 150
q0 = 3e-7 #C
m = 0.01 #kg
R = 0.2 #m
t = 0 #s
dt = 0.01 #s
drag = 7

#Charge Count Parameters
n = 0
N = 100
qs = []
E = vector(0,0,0)

shell = sphere(pos=vector(0,0,0), radius = R, opacity = 0.2)

#E Field Calculation Function    
def Ec(robs):
    Et = vector(0,0,0)
    for q in qs:
        rt = robs - q.pos
        dE = k*q.q*norm(rt)/mag(rt)**2
        Et += dE
    return (Et)

#Generating Charges Inside Sphere
while n < N:
    rt = R*vector(2*random()-1,2*random()-1,2*random()-1)
    if mag(rt) < R:
        qs += sphere(pos=rt, radius = R/40, make_trail=False)
        n += 1
    
#Optional Different Charge Function    
for q in qs:
    chargen = random()
    if chargen:
        q.color = color.red
        q.q = q0
    else:
        q.color = color.cyan
        q.q = -q0
    q.m = m
    q.p = q.m * vector(0,0,0)
    q.F = vector(0,0,0)

#Animating
while t < 1000:
    rate(50000)
    #Electric Force
    for i in range(len(qs)):
        qs[i].F = -qs[i].p * drag + qs[i].q * E
        for j in range(len(qs)):
            if i != j:
                rt = qs[j].pos - qs[i].pos
                qs[i].F += -k * qs[i].q*qs[j].q*norm(rt)/(mag(rt)**2)
    #Force
    for q in qs:
        if mag(q.pos) > R:
            q.F += -K *(mag(q.pos)-R) * norm(q.pos)
        q.p += q.F * dt
        q.pos += q.p/q.m * dt
        
    if mag(Ec(vector(0,0,0))) < 200:
        f1.plot(t, mag(Ec(vector(0,0,0))))
        print(mag(Ec(vector(0,0,0))))
    
    count = 0
    stdt = 0
    #Checks STD of the distance from the Charge Position to the center when E field is less than 0.001
    if mag(Ec(vector(0,0,0))) < 0.001:
        print(t)
        for q in qs:
            count += mag(q.pos)
        avg = count/len(qs)
        for q in qs:
            stdt += (mag(q.pos)-avg)**2
        print("STD of Charge Position Magnitude:", stdt/N)
        t += 1000
    #Same but for 36.1446
    elif mag(Ec(vector(0,0,0))) >= 36.4116 and mag(Ec(vector(0,0,0))) < 36.4117:
        for q in qs:
            count += mag(q.pos)
        avg = count/len(qs)
        for q in qs:
            stdt += (mag(q.pos)-avg)**2
        print("STD of Charge Position Magnitude:", stdt/N)
        t += 1000
    #Same but for 36.5813
    elif mag(Ec(vector(0,0,0))) >= 36.5813 and mag(Ec(vector(0,0,0))) < 36.5814:
        for q in qs:
            count += mag(q.pos)
        avg = count/len(qs)
        for q in qs:
            stdt += (mag(q.pos)-avg)**2
        print("STD of Charge Position Magnitude:", stdt/N)
        t += 1000
    
        
        
    t += dt
